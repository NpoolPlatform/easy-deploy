- name: Check swan provider version
  shell:
    cmd: 'swan-provider version | grep {{ swan_version }}'
  ignore_errors: yes
  register: check_swan_version

- name: Print check_swan_version
  debug:
    var:
      "check_swan_version"

- name: Download swan provider release
  become: yes
  become_user: root
  become_method: sudo
  ansible.builtin.get_url:
    url: '{{ swan_provider_download_url }}'
    dest: /usr/local/bin/swan-provider
    mode: 777
  when: check_swan_version.rc !=0

- name: Copy swan provider service file
  become: yes
  become_user: root
  become_method: sudo
  template:
    src: swan-provider.service.j2
    dest: /etc/systemd/system/swan-provider.service

- name: Create swan config directory
  become: yes
  become_user: root
  become_method: sudo
  ansible.builtin.file:
    path: '{{ SWAN_PATH }}/provider/'
    state: directory
    recurse: yes

- name: Copy swan provider config
  become: yes
  become_user: root
  become_method: sudo
  template:
    src: config.toml.j2
    dest: '{{ SWAN_PATH }}/provider/config.toml'

- name: Create log directory
  become: yes
  become_user: root
  become_method: sudo
  ansible.builtin.file:
    path: '/var/log/swan'
    state: directory
    recurse: yes

- name: Install nfs
  become: yes
  become_user: root
  become_method: sudo
  apt:
    name: nfs-kernel-server

- name: Prepare nfs dir
  become: yes
  become_user: root
  become_method: sudo
  ansible.builtin.file:
    path: '{{ swan_provider_download_dir }}'
    state: directory
    recurse: yes

  #- name: Check nfs mountpoint
  #  shell:
  #    cmd: 'mount | grep {{ swan_provider_download_dir }} | grep -w {{ swan_device }}'
  #  ignore_errors: yes
  #  register: check_mount_device
  #
  #- name: Unmount device
  #  become: yes
  #  become_user: root
  #  become_method: sudo
  #  mount:
  #    state: unmounted
  #    path: '{{ swan_provider_download_dir }}'
  #  when: check_mount_device.rc != 0

  #- name: Mount device
  #  become: yes
  #  become_user: root
  #  become_method: sudo
  #  ansible.posix.mount:
  #    src: '{{ swan_storage }}:{{ swan_device }}'
  #    path: '{{ swan_provider_download_dir }}'
  #    opts: ro
  #    state: mounted
  #    fstype: nfs
  #  when: check_mount_device.rc != 0

- name: Mount device
  become: yes
  become_user: root
  become_method: sudo
  ansible.posix.mount:
    src : "{{ item.src }}"
    path: "{{ item.dst }}"
    fstype: "{{ item.fstype }}"
    opts: ro
    state: mounted
  with_items: "{{ mountinfo }}"
  when: mountinfo is defined

- name: Start swan provider daemon
  become: yes
  become_user: root
  become_method: sudo
  systemd:
    state: restarted
    daemon_reload: yes
    name: swan-provider
    enabled: yes
